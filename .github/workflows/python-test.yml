
# This workflow will install Python dependencies, run tests and lint with a variety of Python versions

name: Test and lint

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 black pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test formatting with black
      run: |
        # Stop the build if there are formatting issues using black formatting guidelines
        black . --check
    - name: Run pytest
      run: |
        pytest -v
      env:
        API_KEY: ${{secrets.API_KEY}}
        API_SECRET_KEY: ${{secrets.API_SECRET_KEY}}
        ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
        ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
        CONTEXT_API: ${{secrets.CONTEXT_API}}
        CONTEXT_API_SECRET: ${{secrets.CONTEXT_API_SECRET}}
        CONTEXT_ACCESS: ${{secrets.CONTEXT_ACCESS}}
        CONTEXT_ACCESS_SECRET: ${{secrets.CONTEXT_ACCESS_SECRET}}
        TEST_API: ${{secrets.TEST_API}}
        TEST_API_SECRET: ${{secrets.TEST_API_SECRET}}
        TEST_ACCESS: ${{secrets.TEST_ACCESS}}
        TEST_ACCESS_SECRET: ${{secrets.TEST_ACCESS_SECRET}}
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}